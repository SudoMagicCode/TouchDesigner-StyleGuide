"use strict";(self.webpackChunktdStyleGuide=self.webpackChunktdStyleGuide||[]).push([[9126],{6639:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"SM-guide/python-in-td/py-exts","title":"Extensions","description":"Python extensions in TouchDesigner","source":"@site/docs/SM-guide/python-in-td/002-py-exts.md","sourceDirName":"SM-guide/python-in-td","slug":"/SM-guide/python-in-td/extensions","permalink":"/docs/SM-guide/python-in-td/extensions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Extensions","sidebar_position":2,"description":"Python extensions in TouchDesigner","slug":"/SM-guide/python-in-td/extensions"},"sidebar":"tutorialSidebar","previous":{"title":"Modules","permalink":"/docs/SM-guide/python-in-td/modules"},"next":{"title":"Local Modules","permalink":"/docs/SM-guide/python-in-td/local-modules"}}');var i=t(4848),o=t(8453);const r={title:"Extensions",sidebar_position:2,description:"Python extensions in TouchDesigner",slug:"/SM-guide/python-in-td/extensions"},l="Extensions",a={},d=[{value:"Custom Class Objects",id:"custom-class-objects",level:2},{value:"Type Hinting",id:"type-hinting",level:3},{value:"Doc Strings",id:"doc-strings",level:3},{value:"Promoted Methods",id:"promoted-methods",level:3},{value:"Internal Methods",id:"internal-methods",level:3},{value:"Private Methods",id:"private-methods",level:3},{value:"Singletons",id:"singletons",level:2},{value:"Common Characteristics",id:"common-characteristics",level:3},{value:"Other Class Objects",id:"other-class-objects",level:2},{value:"Links to Derivative&#39;s official docs",id:"links-to-derivatives-official-docs",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"extensions",children:"Extensions"})}),"\n",(0,i.jsx)(n.h2,{id:"custom-class-objects",children:"Custom Class Objects"}),"\n",(0,i.jsx)(n.h3,{id:"type-hinting",children:"Type Hinting"}),"\n",(0,i.jsxs)(n.p,{children:["As a quick reminder, Python is a dynamically typed language. Which is to say that unlike other languages where we must specify a variable type during it's creation, the type of a variable in Python is largely determined at run time. That makes for a very flexible language, but can create some challenges during development - it's easy to incorrectly pass an argument type and then spend valuable debugging only to discover that you pass a ",(0,i.jsx)(n.code,{children:"str"})," instead of an ",(0,i.jsx)(n.code,{children:"int"}),". Python now supports type hinting, which allows you to more easily track the argument type."]}),"\n",(0,i.jsx)(n.p,{children:"When possible, it is highly recommended that that you use type hints - not only for the benefits of autocompletion in VS Code, but also as a kindness to your fellow developers. Here are some quick resources about Type Hinting:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://realpython.com/lessons/type-hinting/",children:"Real Python type hinting lesson"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html",children:"mypy type hints cheat sheet"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.python.org/3.9/library/typing.html",children:"Python docs typing"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"doc-strings",children:"Doc Strings"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def foo(arg1:int, arg2:str) -> list:\n    """A silly example\n\n    An example function that accepts two arguments, returns\n    a list, and raises no errors. This is mostly to illustrate\n    what doc strings might look like for a function.\n\n    Args:\n        arg1 `int`: Some integer\n        arg2 `int`: Some integer\n        \n    Returns:\n        my_list `list`: A list made up of arg1 and arg2\n\n    Raises:\n        None\n    """\n    my_list = [arg1, arg2]\n    return my_list\n'})}),"\n",(0,i.jsx)(n.h3,{id:"promoted-methods",children:"Promoted Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Foo:\n    def __init__(self, owner_op:OP) -> None:\n        self.My_op = owner_op\n\n    def Promoted_method(self, some_int_arg:int) -> None:\n        pass\n"})}),"\n",(0,i.jsx)(n.h3,{id:"internal-methods",children:"Internal Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Foo:\n    def __init__(self, owner_op:OP) -> None:\n        self.My_op = owner_op\n\n    def internal_method(self, some_int_arg:int) -> None:\n        pass\n"})}),"\n",(0,i.jsx)(n.h3,{id:"private-methods",children:"Private Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Foo:\n    def __init__(self, owner_op:OP) -> None:\n        self.My_op = owner_op\n\n    def _private_method(self, some_int_arg:int) -> None:\n        pass\n"})}),"\n",(0,i.jsx)(n.h2,{id:"singletons",children:"Singletons"}),"\n",(0,i.jsx)(n.p,{children:"Classes that belong to a single instance of an operator."}),"\n",(0,i.jsx)(n.h3,{id:"common-characteristics",children:"Common Characteristics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Output:\n\n    def __init__(self, owner_op):\n        self.Owner_op = owner_op\n\n    def Touch_start(self):\n        print('Running Touch Start | Output')\n"})}),"\n",(0,i.jsx)(n.h2,{id:"other-class-objects",children:"Other Class Objects"}),"\n",(0,i.jsx)(n.h2,{id:"links-to-derivatives-official-docs",children:"Links to Derivative's official docs"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);