"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3273],{9055:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(5893),i=t(1151);const r={title:"Python Doc Strings",sidebar_position:5,description:"An overview of Python autocomplete in VS Code"},s="Doc Strings and Comments",a={id:"SM-guide/python-in-td/py-td-doc-strings",title:"Python Doc Strings",description:"An overview of Python autocomplete in VS Code",source:"@site/docs/SM-guide/python-in-td/005-py-td-doc-strings.md",sourceDirName:"SM-guide/python-in-td",slug:"/SM-guide/python-in-td/py-td-doc-strings",permalink:"/docs/SM-guide/python-in-td/py-td-doc-strings",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Python Doc Strings",sidebar_position:5,description:"An overview of Python autocomplete in VS Code"},sidebar:"tutorialSidebar",previous:{title:"Auto-Complete",permalink:"/docs/SM-guide/python-in-td/py-td-auto-complete"},next:{title:"GLSL",permalink:"/docs/category/glsl"}},l={},d=[{value:"Why Use Doc Strings?",id:"why-use-doc-strings",level:2},{value:"Examples",id:"examples",level:2},{value:"Function",id:"function",level:3},{value:"Practical Example",id:"practical-example",level:4},{value:"Boiler Plate",id:"boiler-plate",level:4},{value:"Short Form",id:"short-form",level:4},{value:"Header",id:"header",level:3},{value:"Practical Example",id:"practical-example-1",level:4},{value:"Boiler Plate",id:"boiler-plate-1",level:4},{value:"Class",id:"class",level:3},{value:"Practical Example",id:"practical-example-2",level:4},{value:"Boiler Plate",id:"boiler-plate-2",level:4},{value:"Method",id:"method",level:3},{value:"Practical Example",id:"practical-example-3",level:4},{value:"Boiler Plate",id:"boiler-plate-3",level:4},{value:"Short Form",id:"short-form-1",level:4},{value:"Links to Derivative&#39;s official docs",id:"links-to-derivatives-official-docs",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"doc-strings-and-comments",children:"Doc Strings and Comments"}),"\n",(0,o.jsx)(n.h2,{id:"why-use-doc-strings",children:"Why Use Doc Strings?"}),"\n",(0,o.jsx)(n.p,{children:"Doc strings and comments are helpful in a number of different circumstances when reading and authoring code. Most importantly, these are the breadcrumbs and operating notes that you leave for your future self. In the heat of working on a project you rarely need a reminder about about how function or class works, but in 6 months... you might. Doc strings and comments are here to help ensure that the best ideas can keep getting used, and don't rewritten when it's more work to understand what the code does than to start over."}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.h3,{id:"function",children:"Function"}),"\n",(0,o.jsx)(n.h4,{id:"practical-example",children:"Practical Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def To_rgb_from_hex(value:str) -> tuple:\n    """Returns a color as a float tuple (rgb) converted\n    from HEX\n    \n    Args\n    ---------------\n    value (`str`)\n    > hex string to be converted into rgb \n\n    Returns\n    ---------------\n    color (`tuple`)\n    > normalized color expressed as (r, g, b) tuple\n    """\n'})}),"\n",(0,o.jsx)(n.h4,{id:"boiler-plate",children:"Boiler Plate"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def Foo_bar(arg1:int) -> None:\n    """Single line description of function.\n\n    Any additional comments or operational considerations you\'d like\n    to add about the function in question.\n    \n    Args\n    ---------------\n    arg1 (`int`)\n    > description of arg\'s role \n\n    Returns\n    ---------------\n    None\n    """\n'})}),"\n",(0,o.jsx)(n.h4,{id:"short-form",children:"Short Form"}),"\n",(0,o.jsx)(n.p,{children:"The short form usage is acceptable when there is a present type hint for any arguments and returns. Provided that hints are present, the doc string can be abridged to only include a brief description of the method / function."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def Foo_bar(arg1:str) -> None:\n    """One line description\n\n    Any additional comments or operational considerations you\'d like\n    to add about the method in question.\n    ""\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"header",children:"Header"}),"\n",(0,o.jsx)(n.h4,{id:"practical-example-1",children:"Practical Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'"""\nSudoMagic | sudomagic.com\nAuthors | Matthew Ragan, Ian Shelanskey\nContact | contact@sudomagic.com\n"""\n\n# td python mods\nimport SudoMagic\nimport Lookup\n\n# pure python\nimport json\nimport sys\nimport socket\nimport logging\n'})}),"\n",(0,o.jsx)(n.h4,{id:"boiler-plate-1",children:"Boiler Plate"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'"""\nSudoMagic | sudomagic.com\nAuthors | Matthew Ragan, Ian Shelanskey\nContact | contact@sudomagic.com\n"""\n\n# td python mods\nimport SudoMagic\nimport Lookup\n\n# pure python\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"class",children:"Class"}),"\n",(0,o.jsx)(n.h4,{id:"practical-example-2",children:"Practical Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class Project(SudoMagic.Types.abstract_component_singleton):\n    """Project Class\n\n    The project class is responsible for the construction and distribution\n    of all extensions. _setup() constructs extensions in order, allowing\n    for a reliable and consistent start-up sequence for all python extensions\n\n    Additionally the Project class is responsible for start-up functions\n    that include loading settings from file.\n    """\n\n'})}),"\n",(0,o.jsx)(n.h4,{id:"boiler-plate-2",children:"Boiler Plate"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class Foo:\n    """Foo Class one line description\n\n    Any additional comments or operational considerations you\'d like\n    to add about the class in question.\n    """\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"method",children:"Method"}),"\n",(0,o.jsx)(n.h4,{id:"practical-example-3",children:"Practical Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def Set_process(self, override_role:str) -> None:\n    """sets process from available processes in config\n    \n    overrides provided env var and runs Touch_start()\n    \n    Args\n    ---------------\n    override_role (`str`)\n    > new string to set for role \n\n    Returns\n    ---------------\n    None\n    """\n'})}),"\n",(0,o.jsx)(n.h4,{id:"boiler-plate-3",children:"Boiler Plate"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def Bar(self, arg1:str) -> None:\n    """One line description\n\n    Any additional comments or operational considerations you\'d like\n    to add about the method in question.\n\n    Args\n    ---------------\n    self (`callable`)\n    > new string to set for role \n\n    arg1 (`str`)\n    > some argument description \n\n    Returns\n    ---------------\n    None\n    """\n'})}),"\n",(0,o.jsx)(n.h4,{id:"short-form-1",children:"Short Form"}),"\n",(0,o.jsx)(n.p,{children:"The short form usage is acceptable when there is a present type hint for any arguments and returns. Provided that hints are present, the doc string can be abridged to only include a brief description of the method / function."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def Bar(self, arg1:str) -> None:\n    """One line description\n\n    Any additional comments or operational considerations you\'d like\n    to add about the method in question.\n    """\n'})}),"\n",(0,o.jsx)(n.h2,{id:"links-to-derivatives-official-docs",children:"Links to Derivative's official docs"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://docs.derivative.ca/MOD_Class",children:"MOD Class"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var o=t(7294);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);